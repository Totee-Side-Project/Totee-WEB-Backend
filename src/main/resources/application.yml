# Health Check
management:
  endpoints:
    web:
      base-path: "/"
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
      show-details: always
  health:
    db:
      enabled: true
    diskspace:
      enabled: true

vapid:
  public:
    key: 'BFgwklomAULsbnwTPW7KBoVDlldEe1pxRqEXG8wAFxsgAg8ztXm6Q2O2LLUhgvKhfBCpxZZ7J5JWccEvzuoudE4'
  private:
    key: 'qZkIETJMzm6H666GKzHuGXOjEnsTh4acEuVTKgLDUbs'

jwt:
  secret: '8sknjlO3NPTBqo319DHLNqsQAfRJEdKsETOds'

app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 1800000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - https://totee.site/oauth/redirect
      - https://totee-fe-omega.vercel.app/oauth/rediret
      - https://totee-fe-alpha.vercel.app/oauth2/redirect

# GitAction

secrets:
  AWS_ACCESS_KEY_ID: AKIA6FQGGONZNCGZLYDD
  AWS_SECRET_ACCESS_KEY: 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

logging.level.com.amazonaws.util.EC2MetadataUtils: error

cloud:
  aws:
    s3:
      bucket: elasticbeanstalk-us-west-2-973896840050
      Url: https://elasticbeanstalk-us-west-2-973896840050.s3-us-west-2.amazonaws.com/
    region:
      static: us-west-2
    stack:
      auto: false
    credentials:
      accessKey: AKIA6FQGGONZNCGZLYDD
      secretKey: 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
---

spring:
  profiles:
    active: local
  # 데이터 소스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/toteedb?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
    username: 'root'
    password: '%rnjs6078'
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true
  security:
    oauth2.client:
      registration:
        google:
          clientId: '311868503162-cmrgf54q1q4lohmmjn6o38hbgg4igdnu.apps.googleusercontent.com'
          clientSecret: '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'
          redirectUri: "http://localhost:8080/oauth2/callback/google"
          scope:
            - email
            - profile
        facebook:
          clientId: '1045140703050887'
          clientSecret: '2e71079879a3dc243fa2cc839c299fd5'
          scope:
            - email
            - public_profile
        naver:
          clientId: 'PJMOssr2uhpV4iD8kxBI'
          clientSecret: 'cdvzYwgE7I'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - nickname
            - email
            - profile_image
          clientName: Naver
        kakao:
          clientId: 'a6e3bfe07f924db35b790e9c8190c3a1'
          clientSecret: 'bjwc64VniD6aE66LRwvoYAn6KqvIRklc'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "http://localhost:8080/oauth2/callback/kakao"
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
      # Provider 설정
      provider:
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id

---
server:
  port: 5000
  forward-headers-strategy: native
spring:
  jpa:
    database: MYSQL
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://${rds.hostname}:${rds.port}/${rds.db.name}?serverTimezone=Asia/Seoul
    username: ${rds.username}
    password: ${rds.password}
  security:
    oauth2.client:
      registration:
        google:
          clientId: '311868503162-cmrgf54q1q4lohmmjn6o38hbgg4igdnu.apps.googleusercontent.com'
          clientSecret: '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'
          redirect-uri: 'https://api.totee.link/oauth2/callback/google'
          scope:
            - email
            - profile
        facebook:
          clientId: '1045140703050887'
          clientSecret: '2e71079879a3dc243fa2cc839c299fd5'
          scope:
            - email
            - public_profile
        naver:
          clientId: 'PJMOssr2uhpV4iD8kxBI'
          clientSecret: 'cdvzYwgE7I'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - nickname
            - email
            - profile_image
          clientName: Naver
        kakao:
          clientId: 'a6e3bfe07f924db35b790e9c8190c3a1'
          clientSecret: 'bjwc64VniD6aE66LRwvoYAn6KqvIRklc'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: 'https://api.totee.link/oauth2/callback/kakao'
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
      # Provider 설정
      provider:
        naver:
          authorizationUri: https://nid.naver.com/oauth2.0/authorize
          tokenUri: https://nid.naver.com/oauth2.0/token
          userInfoUri: https://openapi.naver.com/v1/nid/me
          userNameAttribute: response
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
  config:
    activate:
      on-profile: prod