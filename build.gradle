plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories{
    mavenCentral()
}

group 'org.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


dependencies {
    implementation "com.h2database:h2"
    implementation 'org.projectlombok:lombok'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.retry:spring-retry:1.2.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    testImplementation ('org.springframework.boot:spring-boot-starter-test:2.5.3'){
        exclude module : 'junit'
        exclude module : 'junit-jupiter'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.1'){
        exclude module : 'junit-platform-commons'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.5.1'){
        exclude module : 'junit-platform-commons'
    }
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.1')
    testRuntimeOnly("org.junit.platform:junit-platform-engine:1.5.1")
    testRuntimeOnly("org.junit.platform:junit-platform-commons:1.5.1")

    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-core:5.0.0'
}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

test {
    useJUnitPlatform()
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

//  querydsl 추가 끝
compileQuerydsl.doFirst {
  if(file(querydslDir).exists() ) delete(file(querydslDir))
}